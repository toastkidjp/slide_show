apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

mainClassName       = 'jp.toastkid.slideshow.Main'

def defaultEncoding = 'UTF-8'
def jdkVersion      = '1.8'
def javafxHome      = System.getenv('JAVA_HOME')

[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

repositories {
    jcenter()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

configurations {
    provided
}

dependencies {
    compile 'org.apache.pdfbox:pdfbox:2.0.3'
    compile 'commons-logging:commons-logging:1.2'
    provided 'com.jfoenix:jfoenix:1.0.0'
    provided 'org.fxmisc.richtext:richtextfx:1.0.0-SNAPSHOT'
    provided 'org.slf4j:slf4j-api:1.7.21'
    provided 'org.slf4j:slf4j-log4j12:1.7.21'
    provided 'io.reactivex.rxjava2:rxjava:2.1.0'
    provided fileTree(dir: 'libs', include: '*.jar')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.11'
    testCompile 'org.testfx:testfx-junit:4.0.5-alpha'
}

compileJava {
    sourceSets.main.compileClasspath += configurations.provided
    sourceSets.test.compileClasspath += configurations.provided
    sourceSets.main.compileClasspath += configurations.testCompile
}

run {
    classpath += configurations.provided
}

test {
    classpath += configurations.provided
}

eclipse {
    classpath {
        plusConfigurations += [ configurations.provided ]
    }
}

jar {
    manifest {
        attributes 'Main-Class' : mainClassName
    }
    destinationDir = projectDir
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

task fatJar(type: Jar, dependsOn: compileJava) {
    baseName = rootProject.name + "_executable"
    manifest {
        attributes 'Main-Class' : mainClassName
    }
    destinationDir = projectDir
    from configurations.compile.collect  { it.isDirectory() ? it : zipTree(it) }
    from configurations.provided.collect { it.isDirectory() ? it : zipTree(it) }
    from sourceSets.main.output
}
